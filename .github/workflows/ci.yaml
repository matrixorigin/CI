# Define workflow name.
name: MatrixOne CI

on:
  workflow_call:
    secrets:
      S3ENDPOINT:
        description: "S3ENDPOINT For Test"
        required: true
      S3REGION:
        description: "S3REGION For Test"
        required: true
      S3APIKEY:
        description: "S3APIKEY For Test"
        required: true
      S3APISECRET:
        description: "S3APISECRET For Test"
        required: true
      S3BUCKET:
        description: "S3BUCKET For Test"
        required: true

jobs:
  ut-linux-x86:
    runs-on: ubuntu-22.04
    name: UT Test on Ubuntu/x86
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "3"
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Set up Go
        uses: matrixorigin/CI/actions/setup-env@main
        with:
          setup-java: false
      - name: Set env
        run: |
          echo "endpoint=${{ secrets.S3ENDPOINT }}" >> $GITHUB_ENV
          echo "region=${{ secrets.S3REGION }}" >> $GITHUB_ENV
          echo "apikey=${{ secrets.S3APIKEY }}" >> $GITHUB_ENV
          echo "apisecret=${{ secrets.S3APISECRET }}" >> $GITHUB_ENV
          echo "bucket=${{ secrets.S3BUCKET }}" >> $GITHUB_ENV
          # set ut workdir
          echo "UT_WORKDIR=${{ github.workspace }}" >> $GITHUB_ENV
      - name: Unit Testing
        run: |
          cd $GITHUB_WORKSPACE && make clean && make config
          make ut UT_PARALLEL=6 UT_TIMEOUT=40
      - name: Print Result(Old)
        if: ${{ always() }}
        continue-on-error: true
        run: |
          cd $UT_WORKDIR;
          find scratch -name "**-UT-Count.out" -exec cat {} \+;
      - name: Print Skipped Tests
        if: ${{ always() }}
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE;
          find ./ut-report -name skipped.txt -exec cat {} \+;
      - name: Print No Test Case Packages
        if: ${{ always() }}
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE;
          find ./ut-report -name no-test.txt -exec cat {} \+;
      - name: Print Failed Packages and Tests
        if: ${{ always() }}
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE;
          if [ "$(find ./ut-report/failed | wc -l)" -le "2" ]; then
            exit 0;
          fi
          find ./ut-report/failed -name result.txt -exec cat {} \;
          files=($(find ./ut-report/failed | grep -v result.txt))
          for file in "${files[@]}"; do
            if [ -d "$file" ]; then
              continue
            fi
            echo "============================================"
            cat "${file}";
          done
      - name: Print the Top 10 Time-Consuming Tests
        if: ${{ always() }}
        continue-on-error: true
        run: |
          find ./ut-report -name top.txt -exec cat {} \;


  ut-mac-x86:
    #if: ${{ !github.event.pull_request.draft }}
    if: ${{ false }}
    runs-on: macos-12
    name: UT Test on Darwin/x86

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "3"
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Set up Go
        uses: matrixorigin/CI/actions/setup-env@main
        with:
          setup-java: false
      - name: Set env
        run: |
          echo "endpoint=${{ secrets.S3ENDPOINT }}" >> $GITHUB_ENV
          echo "region=${{ secrets.S3REGION }}" >> $GITHUB_ENV
          echo "apikey=${{ secrets.S3APIKEY }}" >> $GITHUB_ENV
          echo "apisecret=${{ secrets.S3APISECRET }}" >> $GITHUB_ENV
          echo "bucket=${{ secrets.S3BUCKET }}" >> $GITHUB_ENV
          # set ut workdir
          echo "UT_WORKDIR=${{ github.workspace }}" >> $GITHUB_ENV
      - name: Unit Testing
        run: |
          cd $GITHUB_WORKSPACE && make clean && make config
          make ut UT_PARALLEL=6
      - name: Print Result
        if: ${{ always() }}
        continue-on-error: true
        run: |
          cd $UT_WORKDIR;
          find scratch -name "**-UT-Count.out" -exec cat {} \;

  sca:
    runs-on: ubuntu-22.04
    name: SCA Test on Ubuntu/x86
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "3"
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: thiagodnf/yaml-schema-checker@v0.0.10
        name: Check Issue Template
        with:
          jsonSchemaFile: .github/ISSUE_TEMPLATE/schema.json
          yamlFiles: |
            .github/ISSUE_TEMPLATE/*.yml
            .github/ISSUE_TEMPLATE/*.yaml
      - name: Set up Go
        uses: matrixorigin/CI/actions/setup-env@main
        with:
          setup-java: false
      - name: Prepare ENV
        run: |
          cd $GITHUB_WORKSPACE && make clean && make config && make build
          make install-static-check-tools
      - name: Static Code Analysis
        run: |
          cd $GITHUB_WORKSPACE
          make static-check
